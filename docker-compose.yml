
version: '3'

networks:
  jait-net:
    driver: bridge

services:
  app:
    build:
      context: ./dockerfiles
      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./web:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mailhog
    networks:
      - jait-net
  
  mysql:
    image: mysql
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: jait
      MYSQL_USER: jait_dba
      MYSQL_PASSWORD: jait_dba_pass123
      MYSQL_ROOT_PASSWORD: jait_dba_pass123
    volumes:
      - "./mysql/data:/var/lib/mysql"
      - "./mysql/my.cnf:/etc/mysql/my.cnf"
    networks:
      - jait-net

  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: php
    volumes:
      - ./web:/var/www/html:delegated
    networks:
      - jait-net

  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: artisan
    volumes:
      - ./web:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - jait-net

  composer:
    image: composer:2
    container_name: composer
    volumes:
      - ./web:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: root
    entrypoint: ['composer']
    networks:
      - jait-net

  npm:
    image: node:17.3
    container_name: npm
    volumes:
      - ./web:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - jait-net

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - jait-net

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - laravel
